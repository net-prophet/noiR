// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: pkg/proto/noir.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trickle_Target int32

const (
	Trickle_PUBLISHER  Trickle_Target = 0
	Trickle_SUBSCRIBER Trickle_Target = 1
)

// Enum value maps for Trickle_Target.
var (
	Trickle_Target_name = map[int32]string{
		0: "PUBLISHER",
		1: "SUBSCRIBER",
	}
	Trickle_Target_value = map[string]int32{
		"PUBLISHER":  0,
		"SUBSCRIBER": 1,
	}
)

func (x Trickle_Target) Enum() *Trickle_Target {
	p := new(Trickle_Target)
	*p = x
	return p
}

func (x Trickle_Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trickle_Target) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_noir_proto_enumTypes[0].Descriptor()
}

func (Trickle_Target) Type() protoreflect.EnumType {
	return &file_pkg_proto_noir_proto_enumTypes[0]
}

func (x Trickle_Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trickle_Target.Descriptor instead.
func (Trickle_Target) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{12, 0}
}

type NoirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	At     string `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	// Types that are assignable to Command:
	//	*NoirRequest_Signal
	//	*NoirRequest_Session
	Command isNoirRequest_Command `protobuf_oneof:"command"`
}

func (x *NoirRequest) Reset() {
	*x = NoirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoirRequest) ProtoMessage() {}

func (x *NoirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoirRequest.ProtoReflect.Descriptor instead.
func (*NoirRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{0}
}

func (x *NoirRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NoirRequest) GetAt() string {
	if x != nil {
		return x.At
	}
	return ""
}

func (x *NoirRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (m *NoirRequest) GetCommand() isNoirRequest_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *NoirRequest) GetSignal() *SignalRequest {
	if x, ok := x.GetCommand().(*NoirRequest_Signal); ok {
		return x.Signal
	}
	return nil
}

func (x *NoirRequest) GetSession() *SessionRequest {
	if x, ok := x.GetCommand().(*NoirRequest_Session); ok {
		return x.Session
	}
	return nil
}

type isNoirRequest_Command interface {
	isNoirRequest_Command()
}

type NoirRequest_Signal struct {
	Signal *SignalRequest `protobuf:"bytes,4,opt,name=signal,proto3,oneof"`
}

type NoirRequest_Session struct {
	Session *SessionRequest `protobuf:"bytes,5,opt,name=session,proto3,oneof"`
}

func (*NoirRequest_Signal) isNoirRequest_Command() {}

func (*NoirRequest_Session) isNoirRequest_Command() {}

type NoirReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	At string `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	// Types that are assignable to Command:
	//	*NoirReply_Signal
	//	*NoirReply_Session
	//	*NoirReply_Error
	Command isNoirReply_Command `protobuf_oneof:"command"`
}

func (x *NoirReply) Reset() {
	*x = NoirReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoirReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoirReply) ProtoMessage() {}

func (x *NoirReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoirReply.ProtoReflect.Descriptor instead.
func (*NoirReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{1}
}

func (x *NoirReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NoirReply) GetAt() string {
	if x != nil {
		return x.At
	}
	return ""
}

func (m *NoirReply) GetCommand() isNoirReply_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *NoirReply) GetSignal() *SignalReply {
	if x, ok := x.GetCommand().(*NoirReply_Signal); ok {
		return x.Signal
	}
	return nil
}

func (x *NoirReply) GetSession() *SessionReply {
	if x, ok := x.GetCommand().(*NoirReply_Session); ok {
		return x.Session
	}
	return nil
}

func (x *NoirReply) GetError() string {
	if x, ok := x.GetCommand().(*NoirReply_Error); ok {
		return x.Error
	}
	return ""
}

type isNoirReply_Command interface {
	isNoirReply_Command()
}

type NoirReply_Signal struct {
	Signal *SignalReply `protobuf:"bytes,3,opt,name=signal,proto3,oneof"`
}

type NoirReply_Session struct {
	Session *SessionReply `protobuf:"bytes,4,opt,name=session,proto3,oneof"`
}

type NoirReply_Error struct {
	Error string `protobuf:"bytes,5,opt,name=error,proto3,oneof"`
}

func (*NoirReply_Signal) isNoirReply_Command() {}

func (*NoirReply_Session) isNoirReply_Command() {}

func (*NoirReply_Error) isNoirReply_Command() {}

// ****************************************************
//SESSION COMMANDS - SESSION MANAGEMENT
//***************************************************
type SessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// Types that are assignable to Payload:
	//	*SessionRequest_Stop
	//	*SessionRequest_PlayFile
	Payload isSessionRequest_Payload `protobuf_oneof:"payload"`
}

func (x *SessionRequest) Reset() {
	*x = SessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRequest) ProtoMessage() {}

func (x *SessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRequest.ProtoReflect.Descriptor instead.
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{2}
}

func (x *SessionRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (m *SessionRequest) GetPayload() isSessionRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SessionRequest) GetStop() *ExpireSessionRequest {
	if x, ok := x.GetPayload().(*SessionRequest_Stop); ok {
		return x.Stop
	}
	return nil
}

func (x *SessionRequest) GetPlayFile() *PlayFileRequest {
	if x, ok := x.GetPayload().(*SessionRequest_PlayFile); ok {
		return x.PlayFile
	}
	return nil
}

type isSessionRequest_Payload interface {
	isSessionRequest_Payload()
}

type SessionRequest_Stop struct {
	Stop *ExpireSessionRequest `protobuf:"bytes,2,opt,name=stop,proto3,oneof"`
}

type SessionRequest_PlayFile struct {
	PlayFile *PlayFileRequest `protobuf:"bytes,3,opt,name=play_file,json=playFile,proto3,oneof"`
}

func (*SessionRequest_Stop) isSessionRequest_Payload() {}

func (*SessionRequest_PlayFile) isSessionRequest_Payload() {}

type SessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// Types that are assignable to Payload:
	//	*SessionReply_Stop
	//	*SessionReply_PlayFile
	//	*SessionReply_Error
	Payload isSessionReply_Payload `protobuf_oneof:"payload"`
}

func (x *SessionReply) Reset() {
	*x = SessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionReply) ProtoMessage() {}

func (x *SessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionReply.ProtoReflect.Descriptor instead.
func (*SessionReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{3}
}

func (x *SessionReply) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (m *SessionReply) GetPayload() isSessionReply_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SessionReply) GetStop() *ExpireSessionReply {
	if x, ok := x.GetPayload().(*SessionReply_Stop); ok {
		return x.Stop
	}
	return nil
}

func (x *SessionReply) GetPlayFile() *PlayFileReply {
	if x, ok := x.GetPayload().(*SessionReply_PlayFile); ok {
		return x.PlayFile
	}
	return nil
}

func (x *SessionReply) GetError() string {
	if x, ok := x.GetPayload().(*SessionReply_Error); ok {
		return x.Error
	}
	return ""
}

type isSessionReply_Payload interface {
	isSessionReply_Payload()
}

type SessionReply_Stop struct {
	Stop *ExpireSessionReply `protobuf:"bytes,2,opt,name=stop,proto3,oneof"`
}

type SessionReply_PlayFile struct {
	PlayFile *PlayFileReply `protobuf:"bytes,3,opt,name=play_file,json=playFile,proto3,oneof"`
}

type SessionReply_Error struct {
	Error string `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

func (*SessionReply_Stop) isSessionReply_Payload() {}

func (*SessionReply_PlayFile) isSessionReply_Payload() {}

func (*SessionReply_Error) isSessionReply_Payload() {}

type ExpireSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	When string `protobuf:"bytes,1,opt,name=when,proto3" json:"when,omitempty"` // when will be now if not specified
}

func (x *ExpireSessionRequest) Reset() {
	*x = ExpireSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireSessionRequest) ProtoMessage() {}

func (x *ExpireSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireSessionRequest.ProtoReflect.Descriptor instead.
func (*ExpireSessionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{4}
}

func (x *ExpireSessionRequest) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

type ExpireSessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	When   string `protobuf:"bytes,1,opt,name=when,proto3" json:"when,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ExpireSessionReply) Reset() {
	*x = ExpireSessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpireSessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpireSessionReply) ProtoMessage() {}

func (x *ExpireSessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpireSessionReply.ProtoReflect.Descriptor instead.
func (*ExpireSessionReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{5}
}

func (x *ExpireSessionReply) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

func (x *ExpireSessionReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PlayFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid      string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"` // peer id will be random if not specified
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Repeat   bool   `protobuf:"varint,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
}

func (x *PlayFileRequest) Reset() {
	*x = PlayFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayFileRequest) ProtoMessage() {}

func (x *PlayFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayFileRequest.ProtoReflect.Descriptor instead.
func (*PlayFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{6}
}

func (x *PlayFileRequest) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *PlayFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PlayFileRequest) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

type PlayFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid      string `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"` // peer id will be random if not specified
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Repeat   bool   `protobuf:"varint,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	Status   bool   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlayFileReply) Reset() {
	*x = PlayFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayFileReply) ProtoMessage() {}

func (x *PlayFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayFileReply.ProtoReflect.Descriptor instead.
func (*PlayFileReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{7}
}

func (x *PlayFileReply) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *PlayFileReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PlayFileReply) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

func (x *PlayFileReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// ****************************************************
//SIGNAL COMMANDS - ION-SFU COMPATIBLE
//1 SIGNAL = 1 CLIENT CONNECTION
//***************************************************
type SignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // SignalRequest.id should be called pid but we are ion-sfu compatible
	// Types that are assignable to Payload:
	//	*SignalRequest_Join
	//	*SignalRequest_Description
	//	*SignalRequest_Trickle
	Payload   isSignalRequest_Payload `protobuf_oneof:"payload"`
	RequestId string                  `protobuf:"bytes,5,opt,name=requestId,proto3" json:"requestId,omitempty"` // optional, for requests with replies
}

func (x *SignalRequest) Reset() {
	*x = SignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRequest) ProtoMessage() {}

func (x *SignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRequest.ProtoReflect.Descriptor instead.
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{8}
}

func (x *SignalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *SignalRequest) GetPayload() isSignalRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SignalRequest) GetJoin() *JoinRequest {
	if x, ok := x.GetPayload().(*SignalRequest_Join); ok {
		return x.Join
	}
	return nil
}

func (x *SignalRequest) GetDescription() []byte {
	if x, ok := x.GetPayload().(*SignalRequest_Description); ok {
		return x.Description
	}
	return nil
}

func (x *SignalRequest) GetTrickle() *Trickle {
	if x, ok := x.GetPayload().(*SignalRequest_Trickle); ok {
		return x.Trickle
	}
	return nil
}

func (x *SignalRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type isSignalRequest_Payload interface {
	isSignalRequest_Payload()
}

type SignalRequest_Join struct {
	Join *JoinRequest `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type SignalRequest_Description struct {
	Description []byte `protobuf:"bytes,3,opt,name=description,proto3,oneof"`
}

type SignalRequest_Trickle struct {
	Trickle *Trickle `protobuf:"bytes,4,opt,name=trickle,proto3,oneof"`
}

func (*SignalRequest_Join) isSignalRequest_Payload() {}

func (*SignalRequest_Description) isSignalRequest_Payload() {}

func (*SignalRequest_Trickle) isSignalRequest_Payload() {}

type SignalReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//	*SignalReply_Join
	//	*SignalReply_Description
	//	*SignalReply_Trickle
	//	*SignalReply_IceConnectionState
	//	*SignalReply_Error
	Payload   isSignalReply_Payload `protobuf_oneof:"payload"`
	RequestId string                `protobuf:"bytes,7,opt,name=requestId,proto3" json:"requestId,omitempty"` // optional, for requests with replies
}

func (x *SignalReply) Reset() {
	*x = SignalReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalReply) ProtoMessage() {}

func (x *SignalReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalReply.ProtoReflect.Descriptor instead.
func (*SignalReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{9}
}

func (x *SignalReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *SignalReply) GetPayload() isSignalReply_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SignalReply) GetJoin() *JoinReply {
	if x, ok := x.GetPayload().(*SignalReply_Join); ok {
		return x.Join
	}
	return nil
}

func (x *SignalReply) GetDescription() []byte {
	if x, ok := x.GetPayload().(*SignalReply_Description); ok {
		return x.Description
	}
	return nil
}

func (x *SignalReply) GetTrickle() *Trickle {
	if x, ok := x.GetPayload().(*SignalReply_Trickle); ok {
		return x.Trickle
	}
	return nil
}

func (x *SignalReply) GetIceConnectionState() string {
	if x, ok := x.GetPayload().(*SignalReply_IceConnectionState); ok {
		return x.IceConnectionState
	}
	return ""
}

func (x *SignalReply) GetError() string {
	if x, ok := x.GetPayload().(*SignalReply_Error); ok {
		return x.Error
	}
	return ""
}

func (x *SignalReply) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type isSignalReply_Payload interface {
	isSignalReply_Payload()
}

type SignalReply_Join struct {
	Join *JoinReply `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type SignalReply_Description struct {
	Description []byte `protobuf:"bytes,3,opt,name=description,proto3,oneof"`
}

type SignalReply_Trickle struct {
	Trickle *Trickle `protobuf:"bytes,4,opt,name=trickle,proto3,oneof"`
}

type SignalReply_IceConnectionState struct {
	IceConnectionState string `protobuf:"bytes,5,opt,name=iceConnectionState,proto3,oneof"`
}

type SignalReply_Error struct {
	Error string `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

func (*SignalReply_Join) isSignalReply_Payload() {}

func (*SignalReply_Description) isSignalReply_Payload() {}

func (*SignalReply_Trickle) isSignalReply_Payload() {}

func (*SignalReply_IceConnectionState) isSignalReply_Payload() {}

func (*SignalReply_Error) isSignalReply_Payload() {}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid         string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Description []byte `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{10}
}

func (x *JoinRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *JoinRequest) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

type JoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description []byte `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *JoinReply) Reset() {
	*x = JoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinReply) ProtoMessage() {}

func (x *JoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinReply.ProtoReflect.Descriptor instead.
func (*JoinReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{11}
}

func (x *JoinReply) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

type Trickle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target Trickle_Target `protobuf:"varint,1,opt,name=target,proto3,enum=noir.Trickle_Target" json:"target,omitempty"`
	Init   string         `protobuf:"bytes,2,opt,name=init,proto3" json:"init,omitempty"`
}

func (x *Trickle) Reset() {
	*x = Trickle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_noir_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trickle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trickle) ProtoMessage() {}

func (x *Trickle) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_noir_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trickle.ProtoReflect.Descriptor instead.
func (*Trickle) Descriptor() ([]byte, []int) {
	return file_pkg_proto_noir_proto_rawDescGZIP(), []int{12}
}

func (x *Trickle) GetTarget() Trickle_Target {
	if x != nil {
		return x.Target
	}
	return Trickle_PUBLISHER
}

func (x *Trickle) GetInit() string {
	if x != nil {
		return x.Init
	}
	return ""
}

var File_pkg_proto_noir_proto protoreflect.FileDescriptor

var file_pkg_proto_noir_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x69, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x6f, 0x69, 0x72, 0x22, 0xb1, 0x01, 0x0a,
	0x0b, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0xab, 0x01, 0x0a, 0x09, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x74, 0x12, 0x2b,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e,
	0x6f, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x95,
	0x01, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x6f, 0x69, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x2a, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x22, 0x40, 0x0a, 0x12,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57,
	0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x22, 0x6d, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69,
	0x6e, 0x12, 0x22, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x54, 0x72,
	0x69, 0x63, 0x6b, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x86, 0x02, 0x0a, 0x0b, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x6a, 0x6f, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x54, 0x72, 0x69,
	0x63, 0x6b, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x12,
	0x30, 0x0a, 0x12, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x69,
	0x74, 0x22, 0x27, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x10, 0x01, 0x32, 0x3c, 0x0a, 0x07, 0x4e, 0x6f,
	0x69, 0x72, 0x53, 0x46, 0x55, 0x12, 0x31, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x11,
	0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x6e, 0x6f, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x69, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x74, 0x2f, 0x6e, 0x6f, 0x69, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_noir_proto_rawDescOnce sync.Once
	file_pkg_proto_noir_proto_rawDescData = file_pkg_proto_noir_proto_rawDesc
)

func file_pkg_proto_noir_proto_rawDescGZIP() []byte {
	file_pkg_proto_noir_proto_rawDescOnce.Do(func() {
		file_pkg_proto_noir_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_noir_proto_rawDescData)
	})
	return file_pkg_proto_noir_proto_rawDescData
}

var file_pkg_proto_noir_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_noir_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_proto_noir_proto_goTypes = []interface{}{
	(Trickle_Target)(0),          // 0: noir.Trickle.Target
	(*NoirRequest)(nil),          // 1: noir.NoirRequest
	(*NoirReply)(nil),            // 2: noir.NoirReply
	(*SessionRequest)(nil),       // 3: noir.SessionRequest
	(*SessionReply)(nil),         // 4: noir.SessionReply
	(*ExpireSessionRequest)(nil), // 5: noir.ExpireSessionRequest
	(*ExpireSessionReply)(nil),   // 6: noir.ExpireSessionReply
	(*PlayFileRequest)(nil),      // 7: noir.PlayFileRequest
	(*PlayFileReply)(nil),        // 8: noir.PlayFileReply
	(*SignalRequest)(nil),        // 9: noir.SignalRequest
	(*SignalReply)(nil),          // 10: noir.SignalReply
	(*JoinRequest)(nil),          // 11: noir.JoinRequest
	(*JoinReply)(nil),            // 12: noir.JoinReply
	(*Trickle)(nil),              // 13: noir.Trickle
}
var file_pkg_proto_noir_proto_depIdxs = []int32{
	9,  // 0: noir.NoirRequest.signal:type_name -> noir.SignalRequest
	3,  // 1: noir.NoirRequest.session:type_name -> noir.SessionRequest
	10, // 2: noir.NoirReply.signal:type_name -> noir.SignalReply
	4,  // 3: noir.NoirReply.session:type_name -> noir.SessionReply
	5,  // 4: noir.SessionRequest.stop:type_name -> noir.ExpireSessionRequest
	7,  // 5: noir.SessionRequest.play_file:type_name -> noir.PlayFileRequest
	6,  // 6: noir.SessionReply.stop:type_name -> noir.ExpireSessionReply
	8,  // 7: noir.SessionReply.play_file:type_name -> noir.PlayFileReply
	11, // 8: noir.SignalRequest.join:type_name -> noir.JoinRequest
	13, // 9: noir.SignalRequest.trickle:type_name -> noir.Trickle
	12, // 10: noir.SignalReply.join:type_name -> noir.JoinReply
	13, // 11: noir.SignalReply.trickle:type_name -> noir.Trickle
	0,  // 12: noir.Trickle.target:type_name -> noir.Trickle.Target
	1,  // 13: noir.NoirSFU.Admin:input_type -> noir.NoirRequest
	2,  // 14: noir.NoirSFU.Admin:output_type -> noir.NoirReply
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pkg_proto_noir_proto_init() }
func file_pkg_proto_noir_proto_init() {
	if File_pkg_proto_noir_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_noir_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoirReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpireSessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_noir_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trickle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_proto_noir_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*NoirRequest_Signal)(nil),
		(*NoirRequest_Session)(nil),
	}
	file_pkg_proto_noir_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NoirReply_Signal)(nil),
		(*NoirReply_Session)(nil),
		(*NoirReply_Error)(nil),
	}
	file_pkg_proto_noir_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SessionRequest_Stop)(nil),
		(*SessionRequest_PlayFile)(nil),
	}
	file_pkg_proto_noir_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SessionReply_Stop)(nil),
		(*SessionReply_PlayFile)(nil),
		(*SessionReply_Error)(nil),
	}
	file_pkg_proto_noir_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SignalRequest_Join)(nil),
		(*SignalRequest_Description)(nil),
		(*SignalRequest_Trickle)(nil),
	}
	file_pkg_proto_noir_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*SignalReply_Join)(nil),
		(*SignalReply_Description)(nil),
		(*SignalReply_Trickle)(nil),
		(*SignalReply_IceConnectionState)(nil),
		(*SignalReply_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_noir_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_noir_proto_goTypes,
		DependencyIndexes: file_pkg_proto_noir_proto_depIdxs,
		EnumInfos:         file_pkg_proto_noir_proto_enumTypes,
		MessageInfos:      file_pkg_proto_noir_proto_msgTypes,
	}.Build()
	File_pkg_proto_noir_proto = out.File
	file_pkg_proto_noir_proto_rawDesc = nil
	file_pkg_proto_noir_proto_goTypes = nil
	file_pkg_proto_noir_proto_depIdxs = nil
}
